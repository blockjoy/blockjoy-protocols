logging {
        level = "warn"
}

discovery.relabel "metrics_grafana_agent" {
	targets = [{
		__address__ = "127.0.0.1:12346",
	}]

	rule {
		target_label = "instance"
		replacement  = "{{ hostname }}{{ tld }}"
	}
}

prometheus.scrape "metrics_grafana_agent" {
	targets      = discovery.relabel.metrics_grafana_agent.output
	forward_to   = [prometheus.remote_write.default.receiver]
	job_name     = "grafana_agent"
	metrics_path = "/metrics"
}

discovery.relabel "metrics_caddy" {
	targets = [{
		__address__ = "127.0.0.1:2019",
	}]

	rule {
		target_label = "instance"
		replacement  = "{{ hostname }}{{ tld }}"
	}
}

prometheus.scrape "metrics_caddy" {
	targets    = discovery.relabel.metrics_caddy.output
	forward_to = [prometheus.remote_write.default.receiver]
	job_name   = "caddy"
 	metrics_path   = "/metrics"        
}

discovery.relabel "metrics_{{ blockchain | lower | replace(from="-", to="_") }}" {
	targets = [{
		__address__ = "127.0.0.1:{{ metrics_port }}",
	}]

	rule {
		target_label = "instance"
		replacement  = "{{ hostname }}{{ tld }}"
	}

	rule {
		target_label = "protocol"
		replacement  = "{{ blockchain | lower | replace(from="-", to="_") }}"
	}
}

prometheus.scrape "metrics_{{ blockchain | lower | replace(from="-", to="_") }}" {
	targets      = discovery.relabel.metrics_{{ blockchain | lower | replace(from="-", to="_") }}.output
	forward_to   = [prometheus.remote_write.default.receiver]
	job_name     = "{{ blockchain | lower | replace(from="-", to="_") }}"
	metrics_path = "/{{ blockchain | lower | replace(from="-", to="_") }}/metrics"
}

local.file_match "babel" {
        path_targets = [{
                __address__ = "127.0.0.1",
                __path__    = "/var/lib/babel/jobs/logs/*",
                instance    = "{{ hostname }}{{ tld }}",
                job         = "babel",
        }]
}

loki.source.file "logs_default_babel" {
        targets    = local.file_match.babel.targets
        forward_to = [loki.write.logs_default.receiver]
}

discovery.relabel "logs_default_journal_scrape" {
	targets = []

	rule {
		source_labels = ["__journal__systemd_unit"]
		target_label  = "unit"
	}

	rule {
		source_labels = ["__journal__boot_id"]
		target_label  = "boot_id"
	}

	rule {
		source_labels = ["__journal__transport"]
		target_label  = "transport"
	}

	rule {
		source_labels = ["__journal_priority_keyword"]
		target_label  = "level"
	}
}

prometheus.remote_write "default" {
        endpoint {
                url = "https://prometheus-prod-24-prod-eu-west-2.grafana.net/api/prom/push"

                basic_auth {
                        username = "1234567"
                        password = ${GRAFANA_PROM_BASICAUTH}
                }
        }
}
